--[[|Raw:
	getgenv().API_KEY='API_KEY_HERE'
	loadstring(game:HttpGet'https://raw.githubusercontent.com/Pixelated03/Roblox/main/Universal/Chat%20GPT-3')()
]]
--|Simplified version of chat with "GPT-3"
--|You will need an API_KEY: https://platform.openai.com/account/api-keys
if not game:IsLoaded()then
	game.Loaded:Wait()
end
--|Disconnect Older
if GT then
	GT.D()
end
--|API Requests
local gg=getgenv
gg().GT={C={},fcs={},D=function()
	for i in pairs(gg().GT.C)do
		i:Disconnect()
	end
	gg().GT.D=nil
	for _,v in pairs(gg().GT.fcs)do
		v:Enable()
	end
	gg().GT=nil
end}
local API_KEY,lc,go,tr,tc,h,rq,sb,plrs,SG,pr=API_KEY or'API_KEY_HERE',true,GT,true,nil,game:FindService'HttpService',request or syn.request or http_request or http.request,string.sub,game:FindService'Players',game:FindService'StarterGui',{Color=Color3.new(.458824,.662745,.611765),Font=Enum.Font.SourceSansItalic,TextSize=16}
if rq then
	--|Request
	local headers,wa,ga={Authorization='Bearer '..API_KEY,['Content-Type']='application/json'},0,game:FindService'MarketplaceService':GetProductInfo(game.PlaceId).Name
	function g(s,p,g)
		--| g = Delay
		if g then
			if wa then
				wa=nil
			else
				repeat task.wait()if GT~=go then return''elseif wa then task.wait()end until wa
				wa=nil
			end
		end
		--print(h:JSONEncode('restrictions:(short answers, no descriptions'..(g and', no links, no lgbt content, filters'or'')..') | extra data:(your name='..plrs.LocalPlayer.DisplayName..',Game="'..ga..'",name="'..p..'",unkownName="Player") | user text: '..s..'"')..',"role":"user"}],"model":"gpt-3.5-turbo"}')
		local r=h:JSONDecode(request({Url='https://api.openai.com/v1/chat/completions', Method='POST', Body='{"messages":[{"content":'..h:JSONEncode('recommended response(restrictions:(short answers, no descriptions'..(g and', no links, no lgbt content, filters'or'')..') | extra data:(botname='..plrs.LocalPlayer.DisplayName..',Game:"'..ga..'",username:"'..p..'",unknowName:"Player")) | user text: '..s..'"')..',"role":"user"}],"model":"gpt-3.5-turbo"}', Headers=headers}).Body)
		wa=0
		return string.gsub(r.choices and r.choices[1].message.content or(r.error.code or r.error.type),'^%s+',''), r.error
	end
	--|[CHAT] GPT
	local t,rmt,gcn,fs=plrs.LocalPlayer.PlayerGui.Chat.Frame.ChatBarParentFrame.Frame.BoxFrame.Frame.ChatBar,game:FindService'ReplicatedStorage'.DefaultChatSystemChatEvents.SayMessageRequest,getconnections,firesignal
	if fs or gcn then
		function nPlr(plr)
			gg().GT.C[plr.Chatted:Connect(function(m)
				if tc and sb(m,1,1)~='/'and not string.match(m,'#')then
					local gp,er=g(m,plr.Name,true)
					if er then
						pr.Text='[GPT] '..gp
						SG:SetCore('ChatMakeSystemMessage',pr)
					else
						local lo=#gp
						if lc and lo>199 then
							for i=0,lo,200 do
								if lo>0 and tc then
									rmt:FireServer(sb(gp,i,i+200),'All')
									lo=lo-200
								end
							end
						elseif tc then
							rmt:FireServer(gp,'All')
						end
					end
				end
			end)]=0
		end
		gg().GT.C[plrs.PlayerAdded:Connect(function(plr)
			nPlr(plr)
		end)]=0
		for _,plr in ipairs(plrs:GetPlayers())do
			if plr~=plrs.LocalPlayer then
				nPlr(plr)
			end
		end
	elseif not fs then
		warn'firesignal=nil'
	end
	pr.Text='[GPT] Enabled. Type \'>\' at the beginning of a string for a response or type \'>gpt send/chat/kill\' to enable/disable'
	SG:SetCore('ChatMakeSystemMessage',pr)
	--|[SENDED] GPT
	if gcn then
		for _,v in pairs(gcn(t.FocusLost))do
			v:Disable()
			gg().GT.fcs[v.Function]=v
		end
	else
		warn'getconnections=nil'
	end
	local cf=t.FocusLost:Connect(function(en,r)
		if GT==go and en and t.Text~=''then
			local ls=string.lower(t.Text)
			if sb(ls,1,1)=='>'and#ls>1 then
				local ot=t.Text
				t.Text=''
				if sb(ls,1,4)=='>gpt'then
					local ac,l=sb(ls,6)
					if ac=='chat'then
						l=tc
						tc=not tc
					elseif ac=='send'then
						l=tr
						tr=not tr
					elseif ac=='kill'then
						pr.Text='[GPT] Got It.'
						SG:SetCore('ChatMakeSystemMessage',pr)
						GT.D()
						return -1
					else
						ac='send'
						l=tr
						tr=not tr
					end
					pr.Text='[GPT] ['..ac..(l and'] Disabled.'or'] Enabled.')
					SG:SetCore('ChatMakeSystemMessage',pr)
				elseif tr then
					pr.Text='[GPT] '..g(ot,plrs.LocalPlayer.Name)
					SG:SetCore('ChatMakeSystemMessage',pr)
				else
					t.Text=ot
				end
			end
			for i in pairs(gg().GT.fcs)do
				i(en,r)
			end
		end
	end)
	gg().GT.C[cf]=0
	return 0
else
	warn'request=nil'
	return
end
